# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
      - dev
      - staging/*/*
      - release/*/*
    exclude:
      - user_story/*/*
      - feature/*/*
      - epic/*/*

pr:
  branches:
    include:
      - master
      - dev
      - staging/*/*
      - release/*/*
    exclude:
      - user_story/*/*
      - feature/*/*
      - epic/*/*

variables:  
  projectServices: 'sources/Services/Unified/Services.Unified.csproj'
  projectAppServiceAbstraction: 'sources/Applications/Shared/Abstractions/Services/Apps.Shared.Abstractions.Services.csproj'
  projectViewModelAbstraction: 'sources/Applications/Shared/Abstractions/ViewModels/Apps.Shared.Abstractions.ViewModels.csproj'
  projectAppService: 'sources/Applications/Shared/Services/Apps.Shared.Services.csproj'
  projectViewModel: 'sources/Applications/Shared/ViewModels/Apps.Shared.ViewModels.csproj'
  projectAngular: 'sources/Applications/Web/Angular/Apps.Web.Angular.csproj'
  projectReact: 'sources/Applications/Web/React/Apps.Web.React.csproj'
  projectSharedUIMVC: 'sources/Applications/Web/SharedUI/Apps.Web.SharedUI.csproj'
  projectMVC: 'sources/Applications/Web/MVC/Apps.Web.MVC.csproj'
  projectMVCDirect: 'sources/Applications/Web/MVCDirect/Apps.Web.MVCDirect.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:     
  - stage: 'nightly_builds'
    displayName: 'Dev Build'
    condition: and(succeeded(), eq(variables['system.pullRequest.targetBranch'], 'dev'))
    jobs: 
    - job: BuildAPIServices
      displayName: 'API Services'
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectServices)'
            arguments: '--configuration $(buildConfiguration)'
    - job: BuildAppLayerSharedAppServiceAbstraction
      displayName: 'Abstraction Layer: Shared App Service'
      dependsOn: BuildAPIServices
      condition: succeeded('BuildAPIServices')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectAppServiceAbstraction)'
            arguments: '--configuration $(buildConfiguration)'
    - job: BuildAppLayerSharedViewModelAbstraction
      displayName: 'Abstraction Layer: Shared ViewModels'
      dependsOn: BuildAppLayerSharedAppServiceAbstraction
      condition: succeeded('BuildAppLayerSharedAppServiceAbstraction')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectViewModelAbstraction)'
            arguments: '--configuration $(buildConfiguration)'
    - job: BuildAppLayerSharedAppService
      displayName: 'Shared App Services'
      dependsOn: BuildAppLayerSharedAppServiceAbstraction
      condition: succeeded('BuildAppLayerSharedAppServiceAbstraction')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectAppService)'
            arguments: '--configuration $(buildConfiguration)'
    - job: BuildAppLayerSharedViewModel
      displayName: 'Shared View Models'
      dependsOn: [BuildAppLayerSharedAppService, BuildAppLayerSharedAppServiceAbstraction, BuildAppLayerSharedViewModelAbstraction]
      condition: and(succeeded('BuildAppLayerSharedAppService'), eq(succeeded('BuildAppLayerSharedAppServiceAbstraction'), succeeded('BuildAppLayerSharedViewModelAbstraction')))
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectViewModelAbstraction)'
            arguments: '--configuration $(buildConfiguration)'
    - job: 'BuildAngularApp'
      displayName: 'Angular SPA'
      dependsOn: BuildAPIServices
      condition: succeeded('BuildAPIServices')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: UseDotNet@2
        displayName: 'DonetNet Core 3.1.101 SDK Installer'
        inputs:
          version: '3.1.301'
          includePreviewVersions: false # Required for preview versions
      - task: NodeTool@0
        displayName: 'Node.js Installer'
        inputs:
          versionSpec: '11.x' 
          checkLatest: true 
      - task: DotNetCoreCLI@2
        displayName: 'Build'
        inputs:
          command: 'build'
          projects: '$(projectAngular)'
          arguments: '--configuration $(buildConfiguration)'
    - job: 'BuildReactApp'
      displayName: 'Build React SPA'
      dependsOn: BuildAPIServices
      condition: succeeded('BuildAPIServices')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: NodeTool@0
          displayName: 'Node.js Installer'
          inputs:
            versionSpec: '11.x' 
            checkLatest: true 
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectAngular)'
            arguments: '--configuration $(buildConfiguration)'
    - job: 'BuildMVCSharedUI'
      displayName: 'Shared UI for MVC'
      dependsOn: BuildAppLayerSharedViewModel
      condition: succeeded('BuildAppLayerSharedViewModel')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: NodeTool@0
          displayName: 'Node.js Installer'
          inputs:
            versionSpec: '11.x' 
            checkLatest: true 
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectSharedUIMVC)'
            arguments: '--configuration $(buildConfiguration)'
    - job: 'BuildMVCApp'
      displayName: 'MVC API'
      dependsOn: BuildMVCSharedUI
      condition: succeeded('BuildMVCSharedUI')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: NodeTool@0
          displayName: 'Node.js Installer'
          inputs:
            versionSpec: '11.x' 
            checkLatest: true 
        - task: DotNetCoreCLI@2
          displayName: 'Build Angular Project'
          inputs:
            command: 'build'
            projects: '$(projectMVC)'
            arguments: '--configuration $(buildConfiguration)'
    - job: 'BuildMVCAppDirect'
      displayName: 'MVC Direct'
      dependsOn: BuildMVCSharedUI
      condition: succeeded('BuildMVCSharedUI')
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - task: UseDotNet@2
          displayName: 'DotNetCore 3.1.301 SDK Installer'
          inputs:
            version: '3.1.301'
            includePreviewVersions: false # Required for preview versions
        - task: NodeTool@0
          displayName: 'Node.js Installer'
          inputs:
            versionSpec: '11.x' 
            checkLatest: true 
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '$(projectMVCDirect)'
            arguments: '--configuration $(buildConfiguration)'
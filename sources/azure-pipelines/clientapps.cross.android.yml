# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
      - dev
      - staging
      - release
    exclude:
      - user_story/*/*
      - feature/*/*
      - epic/*/*
  paths:
    exclude:
      - *.md
      - /**/*.md

pr:
  branches:
    include:
      - master
      - dev
      - staging
      - release
    exclude:
      - user_story/*/*
      - feature/*/*
      - epic/*/*
  paths:
    exclude:
      - *.md
      - /**/*.md

variables:
  solutionPath: 'sources/MediaStore.Cross.ClientApp.Android.sln'
  buildPlatform: 'Any CPU'

stages:
  - stage: 'nightly_builds'
    displayName: 'Dev Environment'
    condition: and(succeeded(), eq(variables['system.pullRequest.targetBranch'], 'dev'))
    jobs:
    - job: 'X-Plat apps for Customers'
      displayName: 'Integrate Android Customer App'
      variables:
        buildConfiguration: 'Debug'
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: VSBuild@1
          displayName: 'Build'
          inputs:
            solution: $(solutionPath)
            vsVersion: 'latest'
            configuration: $(buildConfiguration)
            platform: $(buildPlatform)
            clean: true
            restoreNuGetPackages: true
  - stage: 'staging_builds'
    displayName: 'Staging Environment'
    condition: and(succeeded(), eq(variables['system.pullRequest.targetBranch'], 'staging'))
    jobs:
    - job: 'Build X-Plat apps for Customers'
      displayName: 'Integrate Android Customer App'
      variables:
        buildConfiguration: 'Debug'
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: VSBuild@1
          displayName: 'Build'
          inputs:
            solution: $(solutionPath)
            vsVersion: 'latest'
            configuration: $(buildConfiguration)
            platform: $(buildPlatform)
            clean: true
            restoreNuGetPackages: true  
  - stage: 'prod_builds'
    displayName: 'Production Environment'
    condition: and(succeeded(), eq(variables['system.pullRequest.targetBranch'], 'release'))
    jobs:
    - job: 'Build X-Plat apps for Customers'
      displayName: 'Integrate Android Customer App'
      variables:
        buildConfiguration: 'Release'
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: VSBuild@1
          displayName: 'Build'
          inputs:
            solution: $(solutionPath)
            vsVersion: 'latest'
            configuration: $(buildConfiguration)
            platform: $(buildPlatform)
            clean: true
            restoreNuGetPackages: true
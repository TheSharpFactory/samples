@using Microsoft.JSInterop
@using System.Runtime.InteropServices 

@namespace TheSharpFactory.Apps.Web.SharedUI.Layout

@inject IJSRuntime JS
@inject BlazorApplicationModel appModel

<div class="top-row pl-4 navbar navbar-dark">
     <a class="navbar-brand" href="">Blazor @brand</a>
     <button class="navbar-toggler" @onclick="ToggleNavMenu">
          <span class="navbar-toggler-icon"></span>
     </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
     <ul class="nav flex-column">
          <li class="nav-item px-3">
               <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
               </NavLink>
          </li>
          <li class="nav-item px-3">
               <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
               </NavLink>
          </li>
          <li class="nav-item px-3">
               <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
               </NavLink>
          </li>
     </ul>
</div>

@code {
     private bool collapseNavMenu = true;

     private string NavMenuCssClass
          => collapseNavMenu ? "collapse" : "";

     string brand = string.Empty;

     private void ToggleNavMenu()
     {
          collapseNavMenu = !collapseNavMenu;
     }

     protected override void OnInitialized()
     {
          base.OnInitialized();
          if (appModel.Flavor == BlazorFlavor.Server)
          {
               switch (appModel.Platform)
               {
                    case BlazorPlatform.Web:
                    brand = "Server";
                    break;
               }
          }
          else if ((appModel.Flavor & BlazorFlavor.WebAssembly) != 0
                 || RuntimeInformation.IsOSPlatform(OSPlatform.Create("WEBASSEMBLY")) )
          {
               switch (appModel.Platform)
               {
                    case BlazorPlatform.Web:
                    brand = "WASM";
                    break;
               }
               if ((appModel.Flavor & BlazorFlavor.PWA) != 0)
                    brand += " PWA";
          }
          else if (appModel.Flavor == BlazorFlavor.Hybrid)
          {
               switch (appModel.Platform)
               {
                    case BlazorPlatform.Electron:
                    brand = "Electron";
                    break;
                    case BlazorPlatform.WebWindow:
                    brand = "WebWindow";
                    break;
               }
          }
     }
}

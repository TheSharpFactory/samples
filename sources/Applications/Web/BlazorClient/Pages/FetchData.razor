@page "/fetchdata"
@namespace TheSharpFactory.Apps.Shared.ViewModels.Conventional
@implements IDisposable

@inject IFetchDataViewModel vm

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (vm.Forecasts == null)
{
     <p><em>Loading...</em></p>
}
else
{
     <table class="table">
          <thead>
               <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
               </tr>
          </thead>
          <tbody>
               @foreach (var forecast in vm.Forecasts)
               {
                    <tr>
                         <td>@forecast.Date.ToShortDateString()</td>
                         <td>@forecast.TemperatureC</td>
                         <td>@forecast.TemperatureF</td>
                         <td>@forecast.Summary</td>
                    </tr>
               }
          </tbody>
     </table>
}

@code {
     protected override async Task OnInitializedAsync()
          => await vm.GetForecastAsync(DateTime.Now);

     public void Dispose()
          => vm.Dispose();
}
